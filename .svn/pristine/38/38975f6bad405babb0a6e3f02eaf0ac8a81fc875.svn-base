package gui.highscore;

import control.MasterController;
import gui.startbildschirm.StartbildschirmController;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.AnchorPane;
import model.HighscoreEintrag;

public class HighscoreGUIController {

	MasterController masterController;

	@FXML
	private AnchorPane pane;

	@FXML
	private TableView<HighscoreEintrag> highscoreTable;

	@FXML
	private TableColumn<HighscoreEintrag, String> spielerColumn;

	@FXML
	private TableColumn<HighscoreEintrag, Integer> erfahrungColumn;

	@FXML
	private TableColumn<HighscoreEintrag, Integer> rundenColumn;

	@FXML
	private TableColumn<HighscoreEintrag, Double> scoreColumn;

	public void highscoresAnzeigen() {
		ObservableList<HighscoreEintrag> highscores = FXCollections
				.observableArrayList(masterController.getDungeonRoll().getHighscore());
		highscoreTable.setItems(highscores);
		spielerColumn.setCellValueFactory(new PropertyValueFactory<HighscoreEintrag, String>("name"));
		erfahrungColumn.setCellValueFactory(new PropertyValueFactory<HighscoreEintrag, Integer>("erfahrungspunkte"));
		rundenColumn.setCellValueFactory(new PropertyValueFactory<HighscoreEintrag, Integer>("rundenanzahl"));
		scoreColumn.setCellValueFactory(new PropertyValueFactory<HighscoreEintrag, Double>("bewertung"));
	}

	@FXML
	void mainMenu(ActionEvent event) {
		highscoreTable.setVisible(false);
		FXMLLoader loader = new FXMLLoader();
		try {
			loader.setLocation(getClass().getResource("/gui/startbildschirm/Startbildschirm.fxml"));
			Parent root = loader.load();

			StartbildschirmController controller = loader.getController();
			controller.setMasterController(masterController);

			pane.getChildren().clear();
			pane.getChildren().add(root);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void setMasterController(MasterController masterController) {
		this.masterController = masterController;
	}

}
