package control;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.HashSet;
import java.util.Random;
import java.util.Set;

import org.junit.jupiter.api.Test;

import model.SchwarzeWuerfelseite;
import model.Wuerfel;
import model.Ziel;

public class AuswahlControllerTest {

	/**
	 * Testet, ob die Potenzmengen-Generatormethode (f√ºr 0-5 Wuerfel) funktioniert.<br>
	 * (Die Anzahl der Elemente der Potenzmenge muss 2 ^ |Ursprungsmenge| betragen).
	 */
	@Test
	public void testPotenzmengeAufbauen() {
		Random random = new Random();
		for (int i = 0; i < 6; i++) {
			Set<Ziel> potentielleZiele = new HashSet<>();
			for (int j = 0; j< i; j++) {
				Wuerfel wuerfel = new Wuerfel(true);
				int valueIdx = random.nextInt(SchwarzeWuerfelseite.values().length);
				wuerfel.setSchwarzeWuerfelseite(SchwarzeWuerfelseite.values()[valueIdx]);
				potentielleZiele.add(wuerfel);
			}
			final Set<Set<Ziel>> potenzmenge = AuswahlController.bauePotenzmenge(potentielleZiele);
			assertEquals(Math.pow(2, i), potenzmenge.size());
		}
		
	}
	
}
